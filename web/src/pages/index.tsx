'use client'
import Head from "next/head";
import { useState } from "react";
import { useRouter } from "next/router";
import { useEffect } from "react";

import { getClient } from "@/prismaClient/getClient";
import { record } from "@/types/enumTypes";
const prisma = getClient();
export async function getServerSideProps() {
    const records:record[] = await prisma.object.findMany();
    return {
        props:{
            records: records
        },
        // revalidate: 2.5,
    };
}

import CircleContainer from "@/component/circle";
import { DashBoardContainer } from "@/component/dashBoard";
import { point } from "@/types/enumTypes";
import Chart from "@/component/Chart";

import Main from "@/component/Main";
import useMedia from "@/Hooks/useMedia";

// const { exec, spawn } = require('node:child_process');
// import { exec, spawn, fork } from "child_process";

import Alert from "@/component/Alert";

export default function Home({
    records
}:{
    records:record[]
}){
    // useEffect(()=>{ //要用到再開 <- auto-refresh
    //   const id = setInterval(async ()=>{
    //     window.location.reload();
    //   }, 2500);
    //   return ()=>clearInterval(id);
    // }, []);

    const router = useRouter();
    const refreshData = () => {
      // router.replace(router.asPath);
      router.replace("/");
    }
    const point:point = {
      x: records.at(records.length-1)?.offset_x||0, //last
      y: records.at(records.length-1)?.offset_y||0,
    }

    const { isMobile, isTablet, isDesktop } = useMedia();

    const [alertShow, setAlertShow] = useState<boolean>(false);
    return (
      <>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Main>
          <DashBoardContainer $width={isMobile?400:isTablet?600:800} $height={500}>
            <CircleContainer point={point} />
            {isDesktop?(<Chart records={records} />):(<></>)}
          </DashBoardContainer>
          <button onClick={refreshData}>refresh</button>
          {/* <button onClick={handleClick}>refresh</button> */}
          <Alert show={alertShow} onHide={()=>setAlertShow(false)} msg={"角度值大於安全範圍"} />
          <button onClick={()=>setAlertShow(true)}>alert</button>
        </Main>
      </>
    );
}

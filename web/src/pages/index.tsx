'use client'
import Head from "next/head";
// import { useState } from "react";
import { useRouter } from "next/router";

import { getClient } from "@/prismaClient/getClient";
import { record } from "@/types/enumTypes";
const prisma = getClient();
export async function getServerSideProps() {
    const records:record[] = await prisma.object.findMany();
    return {
        props:{
            records: records
        }
    }
}

import CircleContainer from "@/component/circle";
import { DashBoardContainer } from "@/component/dashBoard";
import { point } from "@/types/enumTypes";
import Chart from "@/component/Chart";

export default function Home({
    records
}:{
    records:record[]
}){
    const router = useRouter();
    const refreshData = () => {
      // router.replace(router.asPath);
      router.replace("/");
    }
    const point:point = {
      x: records.at(records.length-1)?.offset_x||0, //last
      y: records.at(records.length-1)?.offset_y||0,
    }
    return (
      <>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <>{
            records.map((obj)=>(
                <div key={obj.time}>
                    <p>{`${obj.offset_x}`}</p>
                    <p>{`${obj.offset_y}`}</p>
                </div>
            ))
        }</>
        <DashBoardContainer $width={800} $height={500}>
          <CircleContainer point={point} />
          <Chart records={records} />
        </DashBoardContainer>
        <button onClick={refreshData}>refresh</button>
      </>
    );
}
